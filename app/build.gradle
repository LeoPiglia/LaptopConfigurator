/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    // Jena dependencies for RDF and SPARQL
    implementation 'org.apache.jena:jena-core:4.8.0'
    implementation 'org.apache.jena:jena-tdb:4.8.0'
    implementation 'org.apache.jena:jena-tdb2:4.8.0'
    implementation 'org.apache.jena:jena-arq:4.8.0'
    implementation 'org.apache.jena:jena-iri:4.8.0'
    implementation 'org.apache.jena:jena-shacl:4.8.0'
    implementation 'org.apache.jena:jena-shex:4.8.0'
    implementation 'org.apache.jena:jena-rdfconnection:4.8.0'

    // Dipendenza per Mockito
    testImplementation 'org.mockito:mockito-core:4.5.1'

    // Pellet for inference
    implementation 'com.github.galigator.openllet:openllet-core:2.6.4'
    implementation 'com.github.galigator.openllet:openllet-jena:2.6.4'

    // Simple logging
    implementation 'org.slf4j:slf4j-simple:2.0.0'

    // JavaFX dependencies for Windows
    implementation "org.openjfx:javafx-controls:20.0.2:win"
    implementation "org.openjfx:javafx-fxml:20.0.2:win"
    implementation "org.openjfx:javafx-base:20.0.2:win"
    implementation "org.openjfx:javafx-graphics:20.0.2:win"

    // Dependencies for testing
    // Dipendenza per JUnit
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testImplementation 'org.testng:testng:7.1.0'// per JUnit 5

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

test {
    useJUnit()
}

/**
 * Specifies the main class for execution.
 * The 'mainClass' property points to the entry point of the Java application.
 */
application {
    mainClass = 'org.example.app.LaptopConfiguratorModellazioneGestioneConoscezaApp'
    applicationDefaultJvmArgs = [
            "--module-path", 'C:\\ProgramData\\JavaFX\\javafx-sdk-22.0.2\\lib',
            "--add-modules", "javafx.controls,javafx.fxml"
    ]
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('run', JavaExec) {
    standardInput = System.in
}


/**
 * Enables interactivity when running the application with 'gradle run'.
 * This ensures that standard input is properly handled.
 */
tasks.named('run', JavaExec) {
    standardInput = System.in
}